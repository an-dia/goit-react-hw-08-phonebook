{"version":3,"sources":["views/HomeView.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","views/RegisterView.js","views/LoginView.js","components/Container/Container.jsx","components/Title/Title.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/Alert/Alert.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-reducer.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Loader/LoaderSpinner.js","views/ContactsView.js","components/Navigation/Navigation.js","components/UserMenu/ava.jpg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","views/HomeView.module.css","views/RegisterView.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","transitionsStyles/fade.module.css","views/LoginView.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/UserMenu/UserMenu.module.css","components/Alert/Alert.module.css","components/Container/Container.module.css","transitionsStyles/searchFadeStyles.module.css","transitionsStyles/appear.module.css","components/Title/Title.module.css","transitionsStyles/fadeAlertStyle.module.css","components/ContactList/ContactList.module.css","components/Loader/LoaderSpinner.module.css","components/AppBar/AppBar.module.css"],"names":["HomeView","className","s","container","title","role","aria-label","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","console","log","data","message","logIn","logOut","getCurrentUser","state","Boolean","auth","RegisterView","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","form","autoComplete","label","type","onChange","Component","mapDispatchToProps","authOperations","connect","LoginView","onLogin","Container","children","Title","level","TagNameTitle","CSSTransition","in","appear","timeout","classNames","appearStyles","unmountOnExit","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","get","number","contact","then","catch","contactId","delete","Alert","text","Text","getContacts","contacts","items","getFilter","filter","getLoading","loading","getError","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","textAlert","inputNameId","shortid","generate","inputNumberId","some","showAlert","reset","setTimeout","handlerChange","currentTarget","alertStyle","htmlFor","input","id","placeholder","button","contactsSelectors","contactsOperations","event","inputFilterId","filterWrapper","ContactItem","onDeleteContact","listItem","onClick","ContactList","TransitionGroup","component","contactList","map","fadeStyles","LoaderSpinner","color","height","width","ContactsView","fetchContacts","wrapper","style","length","searchFadeStyles","onExit","clearFilter","isLoadingContacts","visibleContacts","Navigation","to","exact","link","activeClassName","activeLink","onLogout","authSelectors","avatar","defaultAvatar","src","alt","AuthNav","isAuthenticated","header","App","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","action","logger","configureStore","reducer","authReducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dc9d2e17.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './HomeView.module.css';\r\n\r\nconst HomeView = () => {\r\n  return (\r\n    <div className={s.container}>\r\n    <h1 className={s.title}>\r\n      Приветственная страница нашего сервиса{' '}\r\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\r\n        💁‍♀️\r\n      </span>\r\n    </h1>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default HomeView;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  }\r\n};\r\n\r\n//POST '/users/signup'\r\n//credentials - body {name,email.password}\r\n//После успешной регистрации добавляем токен в HTTP-заголовок\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    console.log('response.data', response.data);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n\r\n// POST @ /users/login\r\n// body:\r\n//   { email, password }\r\n \r\n//  После успешного логина добавляем токен в HTTP-заголовок\r\n \r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n   \r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n };\r\n\r\n// POST @ /users/logout - отправляем заголовок авторизации\r\n// (явно не передаём, потомучто при логине или регистрации мы его засетили)\r\n// headers:\r\n//   Authorization: Bearer token\r\n \r\n// 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n \r\nconst logOut = () => async dispatch => {\r\n   dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    //данные никакие не передаём, это чтобы очистить state\r\n    // (сбросить в начальное состояние)\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n };\r\n\r\nconst getCurrentUser = credentials => dispatch => { };\r\n\r\nexport default {register, logIn, logOut, getCurrentUser }\r\n\r\n","const getIsAuthenticated = state => Boolean(state.auth.token);\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport s from './RegisterView.module.css';\r\n\r\nclass RegisterView extends Component {\r\n   state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Страница регистрации</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          className={s.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label className={s.label}>\r\n            Имя\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={s.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={s.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\n// одно и тоже\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onRegister: (data) => dispatch(authOperations.register(data)),\r\n// });\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport s from './LoginView.module.css';\r\n\r\nclass LoginView extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Страница логина</h1>\r\n\r\n        <form\r\n          onSubmit={this.handleSubmit}\r\n          className={s.form}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label className={s.label}>\r\n            Почта\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={s.label}>\r\n            Пароль\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Войти</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: authOperations.logIn,\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginView);","import s from './Container.module.css';\n\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\n\nexport default Container;\n","import { CSSTransition } from 'react-transition-group';\nimport appearStyles from '../../transitionsStyles/appear.module.css';\nimport PropTypes from 'prop-types';\nimport s from './Title.module.css';\n\nconst Title = ({ title, level = 1 }) => {\n  const TagNameTitle = `h${level}`;\n  return (\n      <CSSTransition in ={true} appear={true} timeout={500} classNames={appearStyles} unmountOnExit>\n          <TagNameTitle className={s.Title}>{title}</TagNameTitle>\n      </CSSTransition>\n    )\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n// export const clearFilter = createAction('contacts/clearFilter');\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n// const fetchContacts = () => dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   axios.get('/contacts')\r\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)),\r\n//     )\r\n//   .catch(error => dispatch(fetchContactsError(error)));\r\n// } \r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    // test();\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n} \r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) =>\r\n      dispatch(addContactSuccess(data)),\r\n    )\r\n    .catch(error => dispatch(addContactError(error)));\r\n}\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios.delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)),\r\n  )\r\n  .catch(error => dispatch(deleteContactError(error)));\r\n}\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Alert.module.css';\r\n\r\nconst Alert = ({text}) => {\r\n  return (\r\n    <div className={s.Container}>\r\n      <p className={s.Text}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getContacts = state => state.contacts.items; //getAllContacts\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\n\r\n\r\n// const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   console.log('contacts', contacts);\r\n//   const filter = getFilter(state);\r\n//   console.log('filter', filter);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter));\r\n// };\r\n\r\n//Мемоизированный селектор\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n     const normalizedFilter = filter.toLowerCase();\r\n  let list = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter));\r\n  // if (!list.length) list = contacts;\r\n  return list;\r\n  });\r\n \r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getError,\r\n  getFilter,\r\n  getVisibleContacts,\r\n}","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\nimport Alert from '../Alert';\r\nimport alertStyle from '../../transitionsStyles/fadeAlertStyle.module.css';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    textAlert: '',\r\n  };\r\n\r\n  inputNameId = shortid.generate();\r\n  inputNumberId = shortid.generate();\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    if (name === '') {\r\n      this.showAlert('Please enter your contact name!');\r\n      return;\r\n    }\r\n\r\n    if (number === '') {\r\n      this.showAlert('Please enter the contact phone number!');\r\n      return;\r\n    }\r\n\r\n     if (this.props.contacts.some(contact => contact.name === name)) {\r\n       this.showAlert(`${name} is already in contacts`);\r\n       return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  showAlert = (text) => {\r\n    this.reset();\r\n    this.setState({ error: true, textAlert: text });\r\n    setTimeout(() => this.setState({ error: false}), 2000);\r\n \r\n}\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handlerChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { error, textAlert } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition in={error} classNames={alertStyle} timeout={250} unmountOnExit>\r\n          <Alert text={textAlert}/>\r\n        </CSSTransition>\r\n\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor={this.inputNameId}>\r\n          <span>\r\n            Name   \r\n          </span>\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          id={this.inputNameId}\r\n          value={this.state.name}\r\n          name=\"name\"\r\n          placeholder=\"Enter your name\"\r\n          // required\r\n          onChange={this.handlerChange}\r\n        />\r\n        <label className={s.label} htmlFor={this.inputNumberId}>\r\n          <span>\r\n            Number   \r\n          </span>\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          id={this.inputNumberId}\r\n          value={this.state.number}\r\n          name=\"number\"\r\n          placeholder=\"Enter your number\"\r\n          onChange={this.handlerChange}\r\n        />\r\n        <button className={s.button}>Add contact</button>\r\n      </form>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\n// console.log(actions.addContact.type);\r\n\r\nconst items = createReducer([], {\r\n  //actions.addContact.type вычисляемые свойства объекта(приведётся к строке и подставится свойство type )\r\n  [fetchContactsSuccess]: (_, {payload}) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, {payload}) => state.filter(({id}) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n})","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport shortid from 'shortid';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n// import * as contactsActions from '../../redux/contacts/contacts-actions';\n// import contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Filter = ({ name, onChange }) => {\n  let inputFilterId = shortid.generate();\n  return (\n    <div className={s.filterWrapper}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        <span>\n          Find contacts by name\n        </span>\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        placeholder=\"Search\"\n        id={inputFilterId}\n        value={name}\n        onChange={onChange} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(changeFilter(event.target.value)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <li className={s.listItem}>\n        <p className={s.text}>\n          {name} : {number}\n        </p>\n        <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button>\n      </li>    \n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../transitionsStyles/fade.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\"  className={s.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n          <ContactItem name={name} number={number} key={id} onDeleteContact={() => onDeleteContact(id)} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\n ContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n\n","import { connect } from 'react-redux';\r\nimport ContactList from './ContactList';\r\n// import contactsOperations from '../../redux/contacts/contacts-operations';\r\n// import contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './LoaderSpinner.module.css';\r\n\r\nconst LoaderSpinner = () => (\r\n  <div className={s.Container}>\r\n    <Loader type=\"Hearts\" color=\"cornflowerblue\" height={60} width={60} />\r\n  </div>\r\n);\r\nexport default LoaderSpinner;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport Container from '../components/Container';\r\n// import appearFormStyles from './transitionsStyles/appearFormStyles.module.css';\r\nimport fadeStyles from '../transitionsStyles/fade.module.css';\r\nimport searchFadeStyles from '../transitionsStyles/searchFadeStyles.module.css';\r\nimport s from './HomeView.module.css';\r\nimport Title from '../components/Title';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport LoaderSpinner from '../components/Loader';\r\nimport {contactsOperations, contactsSelectors, changeFilter } from '../redux/contacts';\r\n\r\n\r\nclass ContactsView extends Component {\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n    ),\r\n    visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n    ),\r\n    fetchContacts: PropTypes.func,\r\n    clearFilter: PropTypes.func,\r\n    isLoadingContacts: PropTypes.bool,\r\n    error: PropTypes.bool,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  \r\nrender() {\r\n  return (\r\n    <Container>\r\n      <div className={s.wrapper}>\r\n        {this.props.error ? <h1 style={{color:'red'}}>Error: {this.props.error.message}</h1> : null}\r\n      <Title title=\"Phonebook\" level={1} />\r\n      {/* <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit> */}\r\n      <ContactForm />\r\n      {/* </CSSTransition> */}\r\n      <Title title=\"Contacts\" level={2} />\r\n      <CSSTransition in={this.props.contacts.length > 1 } classNames={searchFadeStyles} timeout={250} unmountOnExit onExit={() => this.props.clearFilter()}>\r\n        <Filter />\r\n        </CSSTransition>\r\n        {this.props.isLoadingContacts && <LoaderSpinner/>}\r\n      <CSSTransition in={this.props.visibleContacts.length !== 0 || this.props.contacts.length > 1} classNames={fadeStyles} timeout={250} unmountOnExit>\r\n        <ContactList />\r\n      </CSSTransition>\r\n    </div>\r\n  </Container>)\r\n}\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  // console.log(state)\r\n  contacts: contactsSelectors.getContacts(state),\r\n  filter: contactsSelectors.getFilter(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n  error: contactsSelectors.getError(state),\r\n  visibleContacts: contactsSelectors.getVisibleContacts(state),\r\n}\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  clearFilter: () => dispatch(changeFilter('')),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView)\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// import routes from '../../routes';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/\"\r\n      exact\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n    >\r\n      Главная\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n    >\r\n      Заметки\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/ava.19e44701.jpg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './ava.jpg';\r\nimport s from './UserMenu.module.css';\r\n\r\n// const styles = {\r\n//   container: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//   },\r\n//   avatar: {\r\n//     marginRight: 4,\r\n//   },\r\n//   name: {\r\n//     fontWeight: 700,\r\n//     marginRight: 12,\r\n//   },\r\n// };\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={s.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\r\n    <span className={s.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\n// const styles = {\r\n//   link: {\r\n//     display: 'inline-block',\r\n//     textDecoration: 'none',\r\n//     padding: 12,\r\n//     fontWeight: 700,\r\n//     color: '#2A363B',\r\n//   },\r\n//   activeLink: {\r\n//     color: '#E84A5F',\r\n//   },\r\n// };\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className={s.link}\r\n      activeClassName={s.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport s from './AppBar.module.css';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\n\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={s.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(AppBar);","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport HomeView from './views/HomeView';\r\nimport RegisterView from './views/RegisterView';\r\nimport LoginView from './views/LoginView';\r\nimport ContactsView from './views/ContactsView';\r\nimport Container from './components/Container';\r\nimport AppBar from './components/AppBar';\r\n// import PropTypes from 'prop-types';\r\n// import { CSSTransition } from 'react-transition-group';\r\n// import { connect } from 'react-redux';\r\n// // import appearFormStyles from './transitionsStyles/appearFormStyles.module.css';\r\n// import fadeStyles from './transitionsStyles/fade.module.css';\r\n// import searchFadeStyles from './transitionsStyles/searchFadeStyles.module.css';\r\n// import s from './App.module.css';\r\n// import Title from './components/Title';\r\n// import ContactForm from './components/ContactForm';\r\n// import Filter from './components/Filter';\r\n// import ContactList from './components/ContactList';\r\n// import LoaderSpinner from './components/Loader';\r\n// import {contactsOperations, contactsSelectors, changeFilter } from './redux/contacts';\r\n\r\n\r\n\r\n// class App extends Component {\r\n\r\n//   static propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.isRequired,\r\n//       name: PropTypes.string,\r\n//       number: PropTypes.string,\r\n//     }),\r\n//     ),\r\n//     visibleContacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.isRequired,\r\n//       name: PropTypes.string,\r\n//       number: PropTypes.string,\r\n//     }),\r\n//     ),\r\n//     fetchContacts: PropTypes.func,\r\n//     clearFilter: PropTypes.func,\r\n//     isLoadingContacts: PropTypes.bool,\r\n//     error: PropTypes.bool,\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.props.fetchContacts();\r\n//   }\r\n  \r\n// render() {\r\n//   return (\r\n//     <Container>\r\n//       <div className={s.Wrapper}>\r\n//         {this.props.error ? <h1 style={{color:'red'}}>Error: {this.props.error.message}</h1> : null}\r\n//       <Title title=\"Phonebook\" level={1} />\r\n//       {/* <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit> */}\r\n//       <ContactForm />\r\n//       {/* </CSSTransition> */}\r\n//       <Title title=\"Contacts\" level={2} />\r\n//       <CSSTransition in={this.props.contacts.length > 1 } classNames={searchFadeStyles} timeout={250} unmountOnExit onExit={() => this.props.clearFilter()}>\r\n//         <Filter />\r\n//         </CSSTransition>\r\n//         {this.props.isLoadingContacts && <LoaderSpinner/>}\r\n//       <CSSTransition in={this.props.visibleContacts.length !== 0 || this.props.contacts.length > 1} classNames={fadeStyles} timeout={250} unmountOnExit>\r\n//         <ContactList />\r\n//       </CSSTransition>\r\n//     </div>\r\n//   </Container>)\r\n// }\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n//   // console.log(state)\r\n//   contacts: contactsSelectors.getContacts(state),\r\n//   filter: contactsSelectors.getFilter(state),\r\n//   isLoadingContacts: contactsSelectors.getLoading(state),\r\n//   error: contactsSelectors.getError(state),\r\n//   visibleContacts: contactsSelectors.getVisibleContacts(state),\r\n// }\r\n// );\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n//   clearFilter: () => dispatch(changeFilter('')),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n       <Container>\r\n        <AppBar />\r\n          <Switch>\r\n            <Route exact path='/' component={HomeView} />\r\n            <Route path='/register' component={RegisterView} />\r\n            <Route path='/login' component={LoginView} />\r\n            <Route path='/contacts' component={ContactsView} />\r\n          </Switch>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n \r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  // persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  // console.log('My middleware', action);\r\n  \r\n  //передаёт управление экшенам дальше по цепочке\r\n  next(action);\r\n}\r\n\r\n// console.log(getDefaultMiddleware());\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n}),\r\n  myMiddleware,\r\n  logger\r\n];\r\n\r\n//development or production\r\n// console.log(process.env.NODE_ENV);\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    contacts: contactsReducer,\r\n},\r\n  middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <BrowserRouter>\n          <App />\n        </BrowserRouter> \n      {/* </PersistGate>   */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form___-tLk\",\"label\":\"ContactForm_label__t9hY5\",\"input\":\"ContactForm_input__210rA\",\"button\":\"ContactForm_button__3G2D3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeView_container__1FVPc\",\"title\":\"HomeView_title__2IfDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__2HSMY\",\"label\":\"RegisterView_label__2t6sp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__F87bk\",\"activeLink\":\"Navigation_activeLink__OiE5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3Hl0w\",\"activeLink\":\"AuthNav_activeLink__3ho8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__3j-6Q\",\"enterActive\":\"fade_enterActive__3zqyu\",\"exit\":\"fade_exit__1txw9\",\"exitActive\":\"fade_exitActive__2DbUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__2cJBV\",\"label\":\"LoginView_label__Wy3kR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__35JWZ\",\"label\":\"Filter_label__2bmWG\",\"input\":\"Filter_input__1QSZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__-A_30\",\"button\":\"ContactItem_button__26-yO\",\"listItem\":\"ContactItem_listItem__Nnk7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2qUQL\",\"avatar\":\"UserMenu_avatar__1VAQH\",\"name\":\"UserMenu_name__3Igxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alert_Container__TAaiq\",\"Text\":\"Alert_Text__3RRyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__GoBie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"searchFadeStyles_enter__3qQtV\",\"enterActive\":\"searchFadeStyles_enterActive__1HR1w\",\"exit\":\"searchFadeStyles_exit__1ytvZ\",\"exitActive\":\"searchFadeStyles_exitActive__2Yb3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__3PLC1\",\"appearActive\":\"appear_appearActive__3mDyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__2g8-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlertStyle_enter__3SL3s\",\"enterActive\":\"fadeAlertStyle_enterActive__sjzk1\",\"exit\":\"fadeAlertStyle_exit__3bW88\",\"exitActive\":\"fadeAlertStyle_exitActive__1P1lD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2l1OP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoaderSpinner_Container__2KJGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__34RcJ\"};"],"sourceRoot":""}