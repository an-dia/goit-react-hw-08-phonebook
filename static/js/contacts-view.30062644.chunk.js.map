{"version":3,"sources":["components/Alert/Alert.js","transitionsStyles/fadeAlertStyle.module.css","components/Alert/Alert.module.css","../node_modules/shortid/lib/alphabet.js","views/HomeView.module.css","transitionsStyles/fade.module.css","../node_modules/shortid/index.js","transitionsStyles/searchFadeStyles.module.css","transitionsStyles/appear.module.css","components/Title/Title.module.css","components/ContactForm/ContactForm.module.css","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Title/Title.jsx","components/ContactForm/ContactForm.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","views/ContactsView.js"],"names":["Alert","this","props","errorContacts","setTimeout","clearErrorContacts","errorAuth","clearErrorAuth","CSSTransition","in","message","classNames","alertStyle","timeout","unmountOnExit","className","s","Container","Text","Component","connect","state","contactsSelectors","getError","authSelectors","dispatch","contactsAction","authActions","clearError","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","id","RegExp","replace","test","Title","title","level","TagNameTitle","appear","appearStyles","ContactForm","name","inputNameId","shortid","inputNumberId","handleSubmit","e","preventDefault","contacts","some","contact","showAlert","onSubmit","text","setState","handlerChange","currentTarget","value","form","label","htmlFor","input","type","placeholder","onChange","Button","variant","color","getContacts","contactsOperations","addContact","getFilter","event","changeFilter","target","inputFilterId","filterWrapper","ContactItem","onDeleteContact","listItem","onClick","ContactList","TransitionGroup","component","contactList","map","fadeStyles","getVisibleContacts","deleteContact","ContactsView","fetchContacts","wrapper","error","searchFadeStyles","onExit","clearFilter","isLoadingContacts","Loader","visibleContacts","getLoading"],"mappings":"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","file":"static/js/contacts-view.30062644.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authActions } from '../../redux/auth';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { CSSTransition } from 'react-transition-group';\nimport * as contactsAction from '../../redux/contacts';\nimport alertStyle from '../../transitionsStyles/fadeAlertStyle.module.css';\nimport PropTypes from 'prop-types';\nimport s from './Alert.module.css';\n\n\n\nclass Alert extends Component {\n    static propTypes = {\n        message: PropTypes.string,\n        errorPb: PropTypes.object,\n        errorAuth: PropTypes.string,\n        clearErrorPb: PropTypes.func,\n        clearErrorPAuth: PropTypes.func\n    };\n   \n   \n  componentDidUpdate() {\n      if (this.props.errorContacts) {\n            setTimeout(() => {\n                this.props.clearErrorContacts();\n            }, 3000);\n             return;\n        }\n            if (this.props.errorAuth) {\n            setTimeout(() => {\n                this.props.clearErrorAuth();\n            }, 3000);\n             return;\n        }\n    }\n  \n  render() {\n    return (\n       <CSSTransition\n          in={this.props.message}\n          classNames={alertStyle}\n          timeout={250}\n          unmountOnExit\n        >\n          <div className={s.Container}>\n            <p className={s.Text}>{this.props.message}</p>\n          </div>\n        </CSSTransition>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    errorContacts: contactsSelectors.getError(state),\n    errorAuth: authSelectors.getError(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    clearErrorContacts: () => dispatch(contactsAction.clearError()),\n    clearErrorAuth: () => dispatch(authActions.clearError())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert);\n\n// const Alert = ({ text }) => {\n//   return (\n//     <div className={s.Container}>\n//       <p className={s.Text}>{text}</p>\n//     </div>\n//   );\n// };\n\n// Alert.propTypes = {\n//   text: PropTypes.string.isRequired,\n// };\n\n// export default Alert;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeAlertStyle_enter__3SL3s\",\"enterActive\":\"fadeAlertStyle_enterActive__sjzk1\",\"exit\":\"fadeAlertStyle_exit__3bW88\",\"exitActive\":\"fadeAlertStyle_exitActive__1P1lD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Alert_Container__TAaiq\",\"Text\":\"Alert_Text__3RRyN\"};","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeView_container__1FVPc\",\"title\":\"HomeView_title__2IfDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__3j-6Q\",\"enterActive\":\"fade_enterActive__3zqyu\",\"exit\":\"fade_exit__1txw9\",\"exitActive\":\"fade_exitActive__2DbUI\"};","'use strict';\nmodule.exports = require('./lib/index');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"searchFadeStyles_enter__3qQtV\",\"enterActive\":\"searchFadeStyles_enterActive__1HR1w\",\"exit\":\"searchFadeStyles_exit__1ytvZ\",\"exitActive\":\"searchFadeStyles_exitActive__2Yb3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"appear_appear__3PLC1\",\"appearActive\":\"appear_appearActive__3mDyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__2g8-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form___-tLk\",\"label\":\"ContactForm_label__t9hY5\",\"input\":\"ContactForm_input__210rA\",\"button\":\"ContactForm_button__3G2D3\"};","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__35JWZ\",\"label\":\"Filter_label__2bmWG\",\"input\":\"Filter_input__1QSZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2l1OP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__-A_30\",\"button\":\"ContactItem_button__26-yO\",\"listItem\":\"ContactItem_listItem__Nnk7h\"};","import { CSSTransition } from 'react-transition-group';\nimport appearStyles from '../../transitionsStyles/appear.module.css';\nimport PropTypes from 'prop-types';\nimport s from './Title.module.css';\n\nconst Title = ({ title, level = 1 }) => {\n  const TagNameTitle = `h${level}`;\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames={appearStyles}\n      unmountOnExit\n    >\n      <TagNameTitle className={s.Title}>{title}</TagNameTitle>\n    </CSSTransition>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport shortid from 'shortid';\nimport Alert from '../Alert';\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    message: null,\n  };\n\n  inputNameId = shortid.generate();\n  inputNumberId = shortid.generate();\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    if (name === '') {\n      this.showAlert('Please enter your contact name!');\n      return;\n    }\n\n    if (number === '') {\n      this.showAlert('Please enter the contact phone number!');\n      return;\n    }\n\n    if (this.props.contacts.some(contact => contact.name === name)) {\n      this.showAlert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  showAlert = (text) => {\n    this.reset();\n    this.setState({message: text });\n    setTimeout(() => this.setState({ message: null }), 2000);\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handlerChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <>\n          <Alert message={message} />\n\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label} htmlFor={this.inputNameId}>\n            <span>Name</span>\n          </label>\n          <input\n            className={s.input}\n            type=\"text\"\n            id={this.inputNameId}\n            value={this.state.name}\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            // required\n            onChange={this.handlerChange}\n          />\n          <label className={s.label} htmlFor={this.inputNumberId}>\n            <span>Number</span>\n          </label>\n          <input\n            className={s.input}\n            type=\"tel\"\n            id={this.inputNumberId}\n            value={this.state.number}\n            name=\"number\"\n            placeholder=\"Enter your number\"\n            onChange={this.handlerChange}\n          />\n           <Button variant=\"contained\" color=\"primary\" type=\"submit\">Add contact</Button>\n          {/* <button className={s.button}>Add contact</button> */}\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n  dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport shortid from 'shortid';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n// import * as contactsActions from '../../redux/contacts/contacts-actions';\n// import contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Filter = ({ name, onChange }) => {\n  let inputFilterId = shortid.generate();\n  return (\n    <div className={s.filterWrapper}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        <span>Find contacts by name</span>\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        placeholder=\"Search\"\n        id={inputFilterId}\n        value={name}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from './ContactItem.module.css';\nimport Button from '@material-ui/core/Button';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <>\n      <li className={s.listItem}>\n        <p className={s.text}>\n          {name} : {number}\n        </p>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onDeleteContact}>Delete</Button>\n        {/* <button className={s.button} type=\"button\" onClick={onDeleteContact}>\n          Delete\n        </button> */}\n      </li>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport s from './ContactList.module.css';\nimport fadeStyles from '../../transitionsStyles/fade.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.contactList}>\n      {contacts.map(({ name, number, id }) => (\n        <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n          <ContactItem\n            name={name}\n            number={number}\n            key={id}\n            onDeleteContact={() => onDeleteContact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\n// import contactsOperations from '../../redux/contacts/contacts-operations';\n// import contactsSelectors from '../../redux/contacts/contacts-selectors';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport Container from '../components/Container';\nimport Alert from '../components/Alert';\nimport fadeStyles from '../transitionsStyles/fade.module.css';\nimport searchFadeStyles from '../transitionsStyles/searchFadeStyles.module.css';\nimport s from './HomeView.module.css';\nimport Title from '../components/Title';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport LoaderSpinner from '../components/Loader';\nimport {\n  contactsOperations,\n  contactsSelectors,\n  changeFilter,\n} from '../redux/contacts';\n\n\nclass ContactsView extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string,\n        number: PropTypes.string,\n      }),\n    ),\n    visibleContacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string,\n        number: PropTypes.string,\n      }),\n    ),\n    fetchContacts: PropTypes.func,\n    clearFilter: PropTypes.func,\n    isLoadingContacts: PropTypes.bool,\n    error: PropTypes.string,\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className={s.wrapper}>\n          {this.props.error ? (\n            <Alert/>\n            // <h1 style={{ color: 'red' }}>Error: {this.props.error}</h1>\n          ) : null}\n          <Title title=\"Phonebook\" level={1} />\n          {/* <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit> */}\n          <ContactForm />\n          {/* </CSSTransition> */}\n          <Title title=\"Contacts\" level={2} />\n          <CSSTransition\n            in={this.props.contacts.length > 1}\n            classNames={searchFadeStyles}\n            timeout={250}\n            unmountOnExit\n            onExit={() => this.props.clearFilter()}\n          >\n            <Filter />\n          </CSSTransition>\n          {this.props.isLoadingContacts && <LoaderSpinner />}\n          <CSSTransition\n            in={\n              this.props.visibleContacts.length !== 0 ||\n              this.props.contacts.length > 1\n            }\n            classNames={fadeStyles}\n            timeout={250}\n            unmountOnExit\n          >\n            <ContactList />\n          </CSSTransition>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // console.log(state)\n  contacts: contactsSelectors.getContacts(state),\n  filter: contactsSelectors.getFilter(state),\n  isLoadingContacts: contactsSelectors.getLoading(state),\n  error: contactsSelectors.getError(state),\n  visibleContacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n  clearFilter: () => dispatch(changeFilter('')),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\n"],"sourceRoot":""}