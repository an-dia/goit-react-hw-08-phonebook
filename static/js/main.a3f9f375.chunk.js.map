{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/ava.jpg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-reducer.js","components/Loader/LoaderSpinner.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Container/Container.jsx","components/Container/Container.module.css","redux/contacts/contacts-actions.js","components/AppBar/AppBar.module.css","components/Loader/LoaderSpinner.module.css"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","clearError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","isLoading","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","console","log","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","state","getIsAuthenticated","getUserName","getLoading","loading","getError","connect","authSelectors","to","exact","className","s","link","activeClassName","activeLink","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","container","src","alt","width","Button","variant","color","type","onClick","AuthNav","header","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","Container","fallback","Loader","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","action","authPersistConfig","key","storage","whitelist","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","module","exports","items","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filter","id","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","LoaderSpinner","height","fetchContacts","then","catch","addContact","number","contact","deleteContact","contactId","delete","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","children"],"mappings":"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","file":"static/js/main.a3f9f375.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst clearError = createAction('auth/clearError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n  clearError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, {payload}) => payload,   //payload -это наш user\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n  [authActions.clearError]: () => null,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n\n  [authActions.logoutSuccess]: () => false,\n});\n\nconst isLoading = createReducer(false, {\n    [authActions.registerRequest]: () => true,\n    [authActions.registerSuccess]: () => false,\n    [authActions.registerError]: () => false,\n    [authActions.loginRequest]: () => true,\n    [authActions.loginSuccess]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.logoutRequest]: () => true,\n    [authActions.logoutSuccess]: () => false,\n    [authActions.logoutError]: () => false,\n    [authActions.getCurrentUserRequest]: () => true,\n    [authActions.getCurrentUserSuccess]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.clearError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n  isLoading,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n//POST '/users/signup'\n//credentials - body {name,email.password}\n//После успешной регистрации добавляем токен в HTTP-заголовок\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    console.log('response.data', response.data);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n// POST @ /users/login\n// body:\n//   { email, password }\n\n//  После успешного логина добавляем токен в HTTP-заголовок\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n      console.log('response111',response)\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n// POST @ /users/logout - отправляем заголовок авторизации\n// (явно не передаём, потомучто при логине или регистрации мы его засетили)\n// headers:\n//   Authorization: Bearer token\n\n// 1. После успешного логаута, удаляем токен из HTTP-заголовка\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    //данные никакие не передаём, это чтобы очистить state\n    // (сбросить в начальное состояние)\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n\n// GET @ /users/current\n// headers:\n//    Authorization: Bearer token\n\n// 1. Забираем токен из стейта через getState()\n// 2. Если токена нет, выходим не выполняя никаких операций\n// 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  console.log('getState', getState());\n  const {\n    auth: {token: persistedToken},\n  } = getState();\n  \n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n    console.log(response);\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\nconst getUserName = state => state.auth.user.name;\nconst token = state => state.auth.token;\nconst getLoading = state => state.auth.loading;\nconst getError = state => state.auth.error;\nconsole.log(token);\nexport default {\n  getIsAuthenticated,\n  getUserName,\n  token,\n  getLoading,\n  getError,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n// import routes from '../../routes';\nimport s from './Navigation.module.css';\n\nconst Navigation = ({isAuthenticated}) => (\n  <nav>\n    <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\n      Главная\n    </NavLink>\n    \n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Заметки\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n})\n\nexport default connect(mapStateToProps, null)(Navigation);\n","export default __webpack_public_path__ + \"static/media/ava.19e44701.jpg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport Button from '@material-ui/core/Button';\nimport defaultAvatar from './ava.jpg';\nimport s from './UserMenu.module.css';\n\n// const styles = {\n//   container: {\n//     display: 'flex',\n//     alignItems: 'center',\n//   },\n//   avatar: {\n//     marginRight: 4,\n//   },\n//   name: {\n//     fontWeight: 700,\n//     marginRight: 12,\n//   },\n// };\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={s.container}>\n    <img src={avatar} alt=\"\" width=\"32\" className={s.avatar} />\n    <span className={s.name}>Welcome, {name}</span>\n     <Button variant=\"outlined\" color=\"primary\" type=\"button\" onClick={onLogout}>Logout</Button>\n    {/* <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button> */}\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUserName(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\n// const styles = {\n//   link: {\n//     display: 'inline-block',\n//     textDecoration: 'none',\n//     padding: 12,\n//     fontWeight: 700,\n//     color: '#2A363B',\n//   },\n//   activeLink: {\n//     color: '#E84A5F',\n//   },\n// };\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      className={s.link}\n      activeClassName={s.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className={s.link}\n      activeClassName={s.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport s from './AppBar.module.css';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={s.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router';\nimport { connect } from 'react-redux';\nimport { authOperations } from './redux/auth';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport LoaderSpinner from './components/Loader';\n\n// import PropTypes from 'prop-types';\n// import { CSSTransition } from 'react-transition-group';\n// import { connect } from 'react-redux';\n// // import appearFormStyles from './transitionsStyles/appearFormStyles.module.css';\n// import fadeStyles from './transitionsStyles/fade.module.css';\n// import searchFadeStyles from './transitionsStyles/searchFadeStyles.module.css';\n// import s from './App.module.css';\n// import Title from './components/Title';\n// import ContactForm from './components/ContactForm';\n// import Filter from './components/Filter';\n// import ContactList from './components/ContactList';\n// import LoaderSpinner from './components/Loader';\n// import {contactsOperations, contactsSelectors, changeFilter } from './redux/contacts';\n\n// class App extends Component {\n\n//   static propTypes = {\n//     contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       name: PropTypes.string,\n//       number: PropTypes.string,\n//     }),\n//     ),\n//     visibleContacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       name: PropTypes.string,\n//       number: PropTypes.string,\n//     }),\n//     ),\n//     fetchContacts: PropTypes.func,\n//     clearFilter: PropTypes.func,\n//     isLoadingContacts: PropTypes.bool,\n//     error: PropTypes.bool,\n//   }\n\n//   componentDidMount() {\n//     this.props.fetchContacts();\n//   }\n\n// render() {\n//   return (\n//     <Container>\n//       <div className={s.Wrapper}>\n//         {this.props.error ? <h1 style={{color:'red'}}>Error: {this.props.error.message}</h1> : null}\n//       <Title title=\"Phonebook\" level={1} />\n//       {/* <CSSTransition in={true} appear={true} timeout={500} classNames={appearFormStyles} unmountOnExit> */}\n//       <ContactForm />\n//       {/* </CSSTransition> */}\n//       <Title title=\"Contacts\" level={2} />\n//       <CSSTransition in={this.props.contacts.length > 1 } classNames={searchFadeStyles} timeout={250} unmountOnExit onExit={() => this.props.clearFilter()}>\n//         <Filter />\n//         </CSSTransition>\n//         {this.props.isLoadingContacts && <LoaderSpinner/>}\n//       <CSSTransition in={this.props.visibleContacts.length !== 0 || this.props.contacts.length > 1} classNames={fadeStyles} timeout={250} unmountOnExit>\n//         <ContactList />\n//       </CSSTransition>\n//     </div>\n//   </Container>)\n// }\n// };\n\n// const mapStateToProps = state => ({\n//   // console.log(state)\n//   contacts: contactsSelectors.getContacts(state),\n//   filter: contactsSelectors.getFilter(state),\n//   isLoadingContacts: contactsSelectors.getLoading(state),\n//   error: contactsSelectors.getError(state),\n//   visibleContacts: contactsSelectors.getVisibleContacts(state),\n// }\n// );\n\n// const mapDispatchToProps = dispatch => ({\n//   fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n//   clearFilter: () => dispatch(changeFilter('')),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\n\nconst HomeView = lazy(() => import('./views/HomeView' /* webpackChunkName: \"home-view\" */));\nconst RegisterView = lazy(() => import('./views/RegisterView' /* webpackChunkName: \"register-view\" */));\nconst LoginView = lazy(() => import('./views/LoginView' /* webpackChunkName: \"login-view\" */));\nconst ContactsView = lazy(() => import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<LoaderSpinner/>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo={'/contacts'}\n              component={RegisterView} />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo={'/contacts'} \n              component={LoginView} />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo={'/login'} \n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n}\n\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst myMiddleware = store => next => action => {\n  // console.log('My middleware', action);\n\n  //передаёт управление экшенам дальше по цепочке\n  next(action);\n};\n\n// console.log(getDefaultMiddleware());\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  myMiddleware,\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'authToken',\n  storage,\n  whitelist: ['token'],\n  // blacklist: ['user', 'error'],\n}\n\n//development or production\n// console.log(process.env.NODE_ENV);\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  // devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default {store, persistor};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__F87bk\",\"activeLink\":\"Navigation_activeLink__OiE5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3Hl0w\",\"activeLink\":\"AuthNav_activeLink__3ho8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2qUQL\",\"avatar\":\"UserMenu_avatar__1VAQH\",\"name\":\"UserMenu_name__3Igxn\"};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  clearError,\n} from './contacts-actions';\n\n// console.log(actions.addContact.type);\n\nconst items = createReducer([], {\n  //actions.addContact.type вычисляемые свойства объекта(приведётся к строке и подставится свойство type )\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [fetchContactsError]: setError,\n  [addContactError]: setError,\n  [deleteContactError]: setError,\n  [clearError]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './LoaderSpinner.module.css';\n\nconst LoaderSpinner = () => (\n  <div className={s.Container}>\n    <Loader type=\"Hearts\" color=\"cornflowerblue\" height={60} width={60} />\n  </div>\n);\nexport default LoaderSpinner;\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios.get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)),\n    )\n  .catch(error => dispatch(fetchContactsError(error.message)));\n}\n\n// const fetchContacts = () => async dispatch => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     // test();\n//     const { data } = await axios.get('/contacts');\n//     dispatch(fetchContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error));\n//   }\n// };\n\nconst addContact = (name, number) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.contacts.loading;\nconst getContacts = state => state.contacts.items; //getAllContacts\nconst getError = state => state.contacts.error;\n\nconst getFilter = state => state.contacts.filter;\n\n// const getVisibleContacts = state => {\n//   const contacts = getContacts(state);\n//   console.log('contacts', contacts);\n//   const filter = getFilter(state);\n//   console.log('filter', filter);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter));\n// };\n\n//Мемоизированный селектор\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    let list = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n    // if (!list.length) list = contacts;\n    return list;\n  },\n);\n\nexport default {\n  getLoading,\n  getContacts,\n  getError,\n  getFilter,\n  getVisibleContacts,\n};\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__GoBie\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport const clearError = createAction('contacts/clearError');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__34RcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoaderSpinner_Container__2KJGL\"};"],"sourceRoot":""}